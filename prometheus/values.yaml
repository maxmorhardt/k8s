configmapReload:
  prometheus:
    image:
      repository: quay.io/prometheus-operator/prometheus-config-reloader
      tag: v0.85.0
      pullPolicy: Always
    containerPort: 8080
    containerPortName: metrics

    livenessProbe:
      httpGet:
        path: /healthz
        port: metrics
        scheme: HTTP
      periodSeconds: 10
      initialDelaySeconds: 2

    readinessProbe:
      httpGet:
        path: /healthz
        port: metrics
        scheme: HTTP
      periodSeconds: 10

    startupProbe:
      enabled: false
      httpGet:
        path: /healthz
        port: metrics
        scheme: HTTP
      periodSeconds: 10

    resources:
      limits:
        cpu: 100m
        memory: 128Mi
      requests:
        cpu: 100m
        memory: 128Mi

server:
  name: server
  image:
    repository: quay.io/prometheus/prometheus
    tag: "latest"
    pullPolicy: Always

  global:
    scrape_interval: 90s
    scrape_timeout: 30s
    evaluation_interval: 90s

  persistentVolume:
    existingClaim: prometheus

  nodeSelector:
    kubernetes.io/hostname: max-worker

  ingress:
    enabled: false

  replicaCount: 1
  revisionHistoryLimit: 3

  readinessProbeInitialDelay: 30
  readinessProbePeriodSeconds: 5
  readinessProbeTimeout: 4
  readinessProbeFailureThreshold: 3
  readinessProbeSuccessThreshold: 1

  livenessProbeInitialDelay: 30
  livenessProbePeriodSeconds: 15
  livenessProbeTimeout: 10
  livenessProbeFailureThreshold: 3
  livenessProbeSuccessThreshold: 1

  resources:
    limits:
      cpu: 200m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 64Mi

  securityContext:
    runAsNonRoot: true
    runAsUser: 1000
    runAsGroup: 1000
    fsGroup: 1000

  service:
    enabled: true
    servicePort: 80
    sessionAffinity: None
    type: ClusterIP
    clusterIP: 10.43.148.167

  terminationGracePeriodSeconds: 300
  retention: "15d"
  retentionSize: ""

prometheus-node-exporter:
  enabled: true
  rbac:
    pspEnabled: false
  containerSecurityContext:
    allowPrivilegeEscalation: false
  resources:
    limits:
      cpu: 50m
      memory: 64Mi
    requests:
      cpu: 10m
      memory: 32Mi

kube-state-metrics:
  enabled: true

prometheus-pushgateway:
  enabled: false

alertmanager:
  enabled: false

serverFiles:
  prometheus.yml:
    rule_files:
      - /etc/config/recording_rules.yml
      - /etc/config/alerting_rules.yml
      - /etc/config/rules
      - /etc/config/alerts

    scrape_configs:
      - job_name: prometheus
        static_configs:
          - targets:
            - localhost:9090

      - job_name: kubernetes-service-endpoints
        honor_labels: true
        kubernetes_sd_configs:
          - role: endpoints
        relabel_configs:
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
            action: keep
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape_slow]
            action: drop
            regex: true
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
            action: replace
            target_label: __scheme__
            regex: (https?)
          - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
            action: replace
            target_label: __metrics_path__
            regex: (.+)
          - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
            action: replace
            target_label: __address__
            regex: (.+?)(?::\d+)?;(\d+)
            replacement: $1:$2
          - action: labelmap
            regex: __meta_kubernetes_service_annotation_prometheus_io_param_(.+)
            replacement: __param_$1
          - action: labelmap
            regex: __meta_kubernetes_service_label_(.+)
          - source_labels: [__meta_kubernetes_namespace]
            action: replace
            target_label: namespace
          - source_labels: [__meta_kubernetes_service_name]
            action: replace
            target_label: service
          - source_labels: [__meta_kubernetes_pod_node_name]
            action: replace
            target_label: node

      - job_name: k8s-kube-state-metrics-local
        honor_timestamps: true
        metrics_path: /metrics
        scheme: http
        static_configs:
          - targets: ['prometheus-kube-state-metrics.maxstash-global.svc.cluster.local:8080']
        metric_relabel_configs:
        - target_label: cluster
          replacement: local

      - job_name: keycloak
        metrics_path: /metrics
        scheme: https
        tls_config:
          insecure_skip_verify: true 
        static_configs:
          - targets: ['keycloak.maxstash-global.svc.cluster.local:9000']

      - job_name: 'postgres'
        scheme: http
        static_configs:
          - targets: [db-postgresql-0.maxstash-global.svc.cluster.local:9187]