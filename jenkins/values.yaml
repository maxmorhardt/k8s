controller:
  componentName: "jenkins-controller"
  image:
    registry: "docker.io"
    repository: "jenkins/jenkins"
    tagLabel: jdk21
    pullPolicy: "Always"

  admin:
    username: "<JENKINS_ADMIN_USERNAME>"
    password: "<JENKINS_ADMIN_PASSWORD>"

  resources:
    requests:
      cpu: "500m"
      memory: "512Mi"
    limits:
      cpu: "1000m"
      memory: "1024Mi"

  usePodSecurityContext: true
  runAsUser: 1000
  fsGroup: 1000

  containerSecurityContext:
    runAsUser: 1000
    runAsGroup: 1000
    readOnlyRootFilesystem: true
    allowPrivilegeEscalation: false

  serviceType: ClusterIP
  
  servicePort: 8080
  targetPort: 8080

  nodeSelector:
    kubernetes.io/hostname: max-worker-2

  healthProbes: true
  probes:
    startupProbe:
      failureThreshold: 12
      httpGet:
        path: '{{ default "" .Values.controller.jenkinsUriPrefix }}/login'
        port: http
      periodSeconds: 10
      timeoutSeconds: 5
    livenessProbe:
      failureThreshold: 5
      httpGet:
        path: '{{ default "" .Values.controller.jenkinsUriPrefix }}/login'
        port: http
      periodSeconds: 10
      timeoutSeconds: 5
    readinessProbe:
      failureThreshold: 3
      httpGet:
        path: '{{ default "" .Values.controller.jenkinsUriPrefix }}/login'
        port: http
      periodSeconds: 10
      timeoutSeconds: 5
  
  installPlugins:
    - kubernetes:4371.vb_33b_086d54a_1
    - workflow-aggregator:608.v67378e9d3db_1
    - git:5.7.0
    - docker-workflow:621.va_73f881d9232
    - configuration-as-code:1995.v540b_50a_eb_0c1
    - oic-auth:4.609.v9de140f63d01
    - role-strategy:799.v5b_e7b_ecc231e
    - pipeline-stage-view:2.38
    - github-branch-source:1864.v411feec5e78e
    - prometheus:819.v50953a_c560dd
  installLatestPlugins: true
  installLatestSpecifiedPlugins: false
  additionalPlugins: []

  existingSecret:
  additionalExistingSecrets: []
  additionalSecrets: []
  secretClaims: []

  JCasC:
    securityRealm: |
      oic:
        serverConfiguration:
          wellKnown:
            wellKnownOpenIDConfigurationUrl: "https://auth.maxstash.io/realms/maxstash-dev/.well-known/openid-configuration"
            scopesOverride: "openid email profile"
        clientId: "<JENKINS_CLIENT_ID>"
        clientSecret: "<JENKINS_CLIENT_SECRET>"
        disableSslVerification: false
        logoutFromOpenidProvider: true
        userNameField: "preferred_username"
        emailFieldName: "email"
        groupsFieldName: "groups"
        properties:
        - escapeHatch:
            secret: "<JENKINS_ADMIN_PASSWORD>"
            username: "<JENKINS_ADMIN_USERNAME>"
            group: "/Jenkins_Admin"
        
    authorizationStrategy: |
      roleBased:
        roles:
          global:
            - name: "admin"
              description: "Jenkins administrators"
              permissions:
                - "Overall/Administer"
              entries:
                - group: "/Jenkins_Admin"

  ingress:
    enabled: true
    apiVersion: "networking.k8s.io/v1"
    labels: {}
    annotations: {}
    ingressClassName: nginx
    path: /
    hostName: jenkins.maxstash.io
    resourceRootUrl:
    tls: 
    - secretName: jenkins.maxstash.io-tls
      hosts:
        - jenkins.maxstash.io

persistence:
  enabled: true
  storageClass: jenkins
  accessMode: "ReadWriteOnce"
  size: 8Gi

serviceAccount:
  create: false
  name: jenkins